"use strict";(self.webpackChunkmg_af_docusaurus=self.webpackChunkmg_af_docusaurus||[]).push([[1558],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return p}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),l=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=l(r),p=a,_=f["".concat(d,".").concat(p)]||f[p]||u[p]||i;return r?n.createElement(_,o(o({ref:t},s),{},{components:r})):n.createElement(_,o({ref:t},s))}));function p(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7486:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return d},metadata:function(){return l},toc:function(){return s},default:function(){return f}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],c={sidebar_label:"generate",title:"test_utilities.generate"},d=void 0,l={unversionedId:"data-detective-airflow/data_detective_airflow_api_reference/test_utilities/generate",id:"data-detective-airflow/data_detective_airflow_api_reference/test_utilities/generate",isDocsHomePage:!1,title:"test_utilities.generate",description:"is\\gen\\dataset\\_mode",source:"@site/docs/data-detective-airflow/data_detective_airflow_api_reference/test_utilities/generate.md",sourceDirName:"data-detective-airflow/data_detective_airflow_api_reference/test_utilities",slug:"/data-detective-airflow/data_detective_airflow_api_reference/test_utilities/generate",permalink:"/data-detective/docs/data-detective-airflow/data_detective_airflow_api_reference/test_utilities/generate",editUrl:"https://github.com/TinkoffCreditSystems/data-detective/edit/master/tools/doc-site/docs/data-detective-airflow/data_detective_airflow_api_reference/test_utilities/generate.md",tags:[],version:"current",frontMatter:{sidebar_label:"generate",title:"test_utilities.generate"},sidebar:"tutorialSidebar",previous:{title:"assertions",permalink:"/data-detective/docs/data-detective-airflow/data_detective_airflow_api_reference/test_utilities/assertions"},next:{title:"generate_df",permalink:"/data-detective/docs/data-detective-airflow/data_detective_airflow_api_reference/test_utilities/generate_df"}},s=[{value:"is_gen_dataset_mode",id:"is_gen_dataset_mode",children:[],level:4}],u={toc:s};function f(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"is_gen_dataset_mode"},"is","_","gen","_","dataset","_","mode"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def is_gen_dataset_mode() -> bool\n")),(0,i.kt)("p",null,"Switching the mode of checking and creating test data"),(0,i.kt)("p",null,"Add to environment variables\nexport GEN_DATASET=Any # creating\nunset GEN_DATASET     # checking"))}f.isMDXComponent=!0}}]);