"use strict";(self.webpackChunkmg_af_docusaurus=self.webpackChunkmg_af_docusaurus||[]).push([[502],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=s(r),f=a,_=p["".concat(l,".").concat(f)]||p[f]||u[f]||o;return r?n.createElement(_,i(i({ref:t},d),{},{components:r})):n.createElement(_,i({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},3078:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return d},default:function(){return p}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],c={sidebar_label:"s3_work",title:"dag_generator.works.s3_work"},l=void 0,s={unversionedId:"data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/s3_work",id:"data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/s3_work",isDocsHomePage:!1,title:"dag_generator.works.s3_work",description:"S3Work",source:"@site/docs/data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/s3_work.md",sourceDirName:"data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works",slug:"/data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/s3_work",permalink:"/data-detective/docs/data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/s3_work",editUrl:"https://github.com/TinkoffCreditSystems/data-detective/edit/master/tools/doc-site/docs/data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/s3_work.md",tags:[],version:"current",frontMatter:{sidebar_label:"s3_work",title:"dag_generator.works.s3_work"},sidebar:"tutorialSidebar",previous:{title:"pg_work",permalink:"/data-detective/docs/data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/pg_work"},next:{title:"sftp_work",permalink:"/data-detective/docs/data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/sftp_work"}},d=[{value:"S3Work Objects",id:"s3work-objects",children:[{value:"get_size",id:"get_size",children:[],level:4}],level:2}],u={toc:d};function p(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"S3Work"),(0,o.kt)("p",null,"The module contains the S3Work class, which is the inheritor of TBaseFileWork, implementing the logic of working with\nfile Work in S3 object storage"),(0,o.kt)("h2",{id:"s3work-objects"},"S3Work Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class S3Work(BaseFileWork)\n")),(0,o.kt)("p",null,"Work based on s3"),(0,o.kt)("h4",{id:"get_size"},"get","_","size"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def get_size(path: str) -> str\n")),(0,o.kt)("p",null,"Get the size of the object in s3.\nIf the object is missing, it returns -1"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"path"),": Object name")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"Rounded object size"))}p.isMDXComponent=!0}}]);