"use strict";(self.webpackChunkdata_detective_docusaurus=self.webpackChunkdata_detective_docusaurus||[]).push([[7501],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),d=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=d(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=d(r),f=n,m=p["".concat(u,".").concat(f)]||p[f]||c[f]||l;return r?a.createElement(m,o(o({ref:t},s),{},{components:r})):a.createElement(m,o({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var d=2;d<l;d++)o[d]=r[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8683:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return s},default:function(){return p}});var a=r(7462),n=r(3366),l=(r(7294),r(3905)),o=["components"],i={sidebar_label:"pg_result",title:"dag_generator.results.pg_result"},u=void 0,d={unversionedId:"data_detective_airflow_api_reference/dag_generator/results/pg_result",id:"data_detective_airflow_api_reference/dag_generator/results/pg_result",isDocsHomePage:!1,title:"dag_generator.results.pg_result",description:"PgResult Objects",source:"@site/docs/data_detective_airflow_api_reference/dag_generator/results/pg_result.md",sourceDirName:"data_detective_airflow_api_reference/dag_generator/results",slug:"/data_detective_airflow_api_reference/dag_generator/results/pg_result",permalink:"/data-detective/docs/data_detective_airflow_api_reference/dag_generator/results/pg_result",editUrl:"https://github.com/TinkoffCreditSystems/data-detective/edit/master/tools/doc-site/docs/data_detective_airflow_api_reference/dag_generator/results/pg_result.md",tags:[],version:"current",frontMatter:{sidebar_label:"pg_result",title:"dag_generator.results.pg_result"},sidebar:"tutorialSidebar",previous:{title:"base_result",permalink:"/data-detective/docs/data_detective_airflow_api_reference/dag_generator/results/base_result"},next:{title:"pickle_result",permalink:"/data-detective/docs/data_detective_airflow_api_reference/dag_generator/results/pickle_result"}},s=[{value:"PgResult Objects",id:"pgresult-objects",children:[{value:"get_table_name",id:"get_table_name",children:[],level:4},{value:"write_df",id:"write_df",children:[],level:4},{value:"write",id:"write",children:[],level:4},{value:"read_df",id:"read_df",children:[],level:4},{value:"read",id:"read",children:[],level:4}],level:2}],c={toc:s};function p(e){var t=e.components,r=(0,n.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"pgresult-objects"},"PgResult Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class PgResult(BaseResult)\n")),(0,l.kt)("p",null,"The result stored in the Postgres database"),(0,l.kt)("h4",{id:"get_table_name"},"get","_","table","_","name"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def get_table_name(context)\n")),(0,l.kt)("p",null,"Return the full name of the table with work"),(0,l.kt)("h4",{id:"write_df"},"write","_","df"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def write_df(obj: DataFrame, context: dict) -> None\n")),(0,l.kt)("p",null,"Write DataFrame to the database"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"obj"),": Dataset for writing"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"context"),": context")),(0,l.kt)("h4",{id:"write"},"write"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def write(obj: Any, context: dict) -> None\n")),(0,l.kt)("p",null,"Write DataFrame to the database.\nSends a call to write_df"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"obj"),": Dataset for writing"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"context"),": context")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Raises"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TypeError"),": If the input dataset type is not DataFrame")),(0,l.kt)("h4",{id:"read_df"},"read","_","df"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def read_df(context: dict) -> DataFrame\n")),(0,l.kt)("p",null,"Read DataFrame from teh database.\nSends a call to work.read_df"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"context"),": context")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"DataFrame"),(0,l.kt)("h4",{id:"read"},"read"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def read(context: dict) -> DataFrame\n")),(0,l.kt)("p",null,"Read DataFrame from the database.\nSends a call to work.read_df"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"context"),": context")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"DataFrame"))}p.isMDXComponent=!0}}]);