"use strict";(self.webpackChunkmg_af_docusaurus=self.webpackChunkmg_af_docusaurus||[]).push([[353],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return m}});var o=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=o.createContext({}),l=function(e){var r=o.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=l(e.components);return o.createElement(c.Provider,{value:r},e.children)},f={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},p=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(t),m=n,d=p["".concat(c,".").concat(m)]||p[m]||f[m]||a;return t?o.createElement(d,i(i({ref:r},u),{},{components:t})):o.createElement(d,i({ref:r},u))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,i=new Array(a);i[0]=p;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},9916:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var o=t(7462),n=t(3366),a=(t(7294),t(3905)),i=["components"],s={sidebar_position:8},c="Comparison with other frameworks",l={unversionedId:"mg-airflow/comparison",id:"mg-airflow/comparison",isDocsHomePage:!1,title:"Comparison with other frameworks",description:"DAG configurators for Airflow",source:"@site/docs/mg-airflow/comparison.md",sourceDirName:"mg-airflow",slug:"/mg-airflow/comparison",permalink:"/metadata-governance/docs/mg-airflow/comparison",editUrl:"https://github.com/TinkoffCreditSystems/metadata-governance/edit/master/tools/doc-site/docs/mg-airflow/comparison.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Production",permalink:"/metadata-governance/docs/mg-airflow/production"},next:{title:"Abstractions for datasets",permalink:"/metadata-governance/docs/mg-airflow/datasets"}},u=[{value:"DAG configurators for Airflow",id:"dag-configurators-for-airflow",children:[],level:2},{value:"DAG orchestrators",id:"dag-orchestrators",children:[],level:2}],f={toc:u};function p(e){var r=e.components,t=(0,n.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"comparison-with-other-frameworks"},"Comparison with other frameworks"),(0,a.kt)("h2",{id:"dag-configurators-for-airflow"},"DAG configurators for Airflow"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/chriscardillo/gusty"},"gusty")," gusty it works with different input formats, supports TaskGroup."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/ajbosco/dag-factory"},"dag-factory")," dag-factory creates DAGs from YAML. It is also supported by TaskGroup.")),(0,a.kt)("h2",{id:"dag-orchestrators"},"DAG orchestrators"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/dagster-io/dagster"},"dagster")," This framework has a lot in common with Apache Airflow.\nThe scheduler and UI are divided into different modules. Work with s3 resources and local files is available.\nDagster implements a concept with work, creation and cleaning upon completion of work. There is also a quick scheduler here."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://argoproj.github.io/argo-workflows/"},"Argo Workflows")," This solution works on Go. Containers are launched in Kubernetes.\nIt is convenient to use because of the isolation of virtual environments. However, there is a difficulty in implementing testing.\nIt is necessary to run pipelines on Go, in which datasets in python will be compared.")))}p.isMDXComponent=!0}}]);