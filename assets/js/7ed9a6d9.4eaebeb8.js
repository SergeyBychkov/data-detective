"use strict";(self.webpackChunkmg_af_docusaurus=self.webpackChunkmg_af_docusaurus||[]).push([[7342],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(r),f=n,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return r?a.createElement(m,o(o({ref:t},u),{},{components:r})):a.createElement(m,o({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6467:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var a=r(7462),n=r(3366),i=(r(7294),r(3905)),o=["components"],l={sidebar_label:"s3_list_bucket",title:"operators.extractors.s3_list_bucket"},s=void 0,c={unversionedId:"data-detective-airflow/data_detective_airflow_api_reference/operators/extractors/s3_list_bucket",id:"data-detective-airflow/data_detective_airflow_api_reference/operators/extractors/s3_list_bucket",isDocsHomePage:!1,title:"operators.extractors.s3_list_bucket",description:"S3ListBucket Objects",source:"@site/docs/data-detective-airflow/data_detective_airflow_api_reference/operators/extractors/s3_list_bucket.md",sourceDirName:"data-detective-airflow/data_detective_airflow_api_reference/operators/extractors",slug:"/data-detective-airflow/data_detective_airflow_api_reference/operators/extractors/s3_list_bucket",permalink:"/data-detective/docs/data-detective-airflow/data_detective_airflow_api_reference/operators/extractors/s3_list_bucket",editUrl:"https://github.com/TinkoffCreditSystems/data-detective/edit/master/tools/doc-site/docs/data-detective-airflow/data_detective_airflow_api_reference/operators/extractors/s3_list_bucket.md",tags:[],version:"current",frontMatter:{sidebar_label:"s3_list_bucket",title:"operators.extractors.s3_list_bucket"},sidebar:"tutorialSidebar",previous:{title:"s3_dump",permalink:"/data-detective/docs/data-detective-airflow/data_detective_airflow_api_reference/operators/extractors/s3_dump"},next:{title:"tsftpoperator",permalink:"/data-detective/docs/data-detective-airflow/data_detective_airflow_api_reference/operators/extractors/tsftpoperator"}},u=[{value:"S3ListBucket Objects",id:"s3listbucket-objects",children:[{value:"execute",id:"execute",children:[],level:4}],level:2}],p={toc:u};function d(e){var t=e.components,r=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"s3listbucket-objects"},"S3ListBucket Objects"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class S3ListBucket(TBaseOperator)\n")),(0,i.kt)("p",null,"Lists keys in a bucket under prefix and not containing delimiter\nexecute returns\nDataFrame [","['","key","'",", ","'","lastmodified","'",", ","'","etag","'",", ","'","size","'",", ","'","storageclass","'",", ","'","owner","']","]"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Connection id\n    Bucket name\n    Limits the response to keys that begin with the specified prefix.\n    A delimiter is a character you use to group keys.\n    Pagination size.\n    Maximum items to return.\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"conn_id"),": Text"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bucket"),": Text"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"prefix"),": Text"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"delimiter"),": Text"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"page_size"),": int"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"max_items"),": int"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"kwargs"),": Additional params for TBaseOperator")),(0,i.kt)("h4",{id:"execute"},"execute"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def execute(context: Optional[dict])\n")),(0,i.kt)("p",null,"Extended implementation of  airflow.hooks.S3_hook.py:155 list_keys.\nlist_keys returns only keys. This implementation returns\nsize and date of last modification\n",(0,i.kt)("a",{parentName:"p",href:"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Client.list_objects"},"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Client.list_objects")),(0,i.kt)("p",null,"A DataFrame is written to result:\n","['","key","'",", ","'","lastmodified","'",", ","'","etag","'",", ","'","size","'",", ","'","storageclass","'",", ","'","owner","']"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Raises"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"AirflowBadRequest"),": With the non-existent bucket")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"context"),": context")))}d.isMDXComponent=!0}}]);