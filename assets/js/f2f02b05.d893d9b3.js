"use strict";(self.webpackChunkdata_detective_docusaurus=self.webpackChunkdata_detective_docusaurus||[]).push([[2914],{3905:function(e,t,r){r.d(t,{Zo:function(){return g},kt:function(){return f}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),l=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},g=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,g=d(e,["components","mdxType","originalType","parentName"]),p=l(r),f=n,s=p["".concat(c,".").concat(f)]||p[f]||u[f]||o;return r?a.createElement(s,i(i({ref:t},g),{},{components:r})):a.createElement(s,i({ref:t},g))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=p;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d.mdxType="string"==typeof e?e:n,i[1]=d;for(var l=2;l<o;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8566:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return d},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return g},default:function(){return p}});var a=r(7462),n=r(3366),o=(r(7294),r(3905)),i=["components"],d={sidebar_label:"generator",title:"dag_generator.generator"},c=void 0,l={unversionedId:"data_detective_airflow_api_reference/dag_generator/generator",id:"data_detective_airflow_api_reference/dag_generator/generator",isDocsHomePage:!1,title:"dag_generator.generator",description:"dag\\_generator",source:"@site/docs/data_detective_airflow_api_reference/dag_generator/generator.md",sourceDirName:"data_detective_airflow_api_reference/dag_generator",slug:"/data_detective_airflow_api_reference/dag_generator/generator",permalink:"/data-detective/docs/data_detective_airflow_api_reference/dag_generator/generator",editUrl:"https://github.com/tinkoff/data-detective/edit/master/tools/doc-site/docs/data_detective_airflow_api_reference/dag_generator/generator.md",tags:[],version:"current",frontMatter:{sidebar_label:"generator",title:"dag_generator.generator"},sidebar:"tutorialSidebar",previous:{title:"How to release data-detective-airflow",permalink:"/data-detective/docs/data-detective-airflow/how-to-release"},next:{title:"python_dag",permalink:"/data-detective/docs/data_detective_airflow_api_reference/dag_generator/dags/python_dag"}},g=[{value:"dag_generator",id:"dag_generator",children:[],level:4},{value:"generate_dag",id:"generate_dag",children:[],level:4}],u={toc:g};function p(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"dag_generator"},"dag","_","generator"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def dag_generator(dag_id_whitelist: Iterable[str] = None) -> Generator[TDag, None, None]\n")),(0,o.kt)("p",null,"DAG Object Generator"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"dag_id_whitelist"),": A list of dag_ids to be generated. If empty, then all will be generated.")),(0,o.kt)("h4",{id:"generate_dag"},"generate","_","dag"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def generate_dag(dag_dir: str, dag_id: str = None) -> TDag\n")),(0,o.kt)("p",null,"Get the DAG object by dag_dir\n@param dag_dir: Full path to the directory\n@param dag_id: Dag_id is considered the directory name if dag_path is not specified\n@return:"))}p.isMDXComponent=!0}}]);