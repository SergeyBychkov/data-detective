"use strict";(self.webpackChunkmg_af_docusaurus=self.webpackChunkmg_af_docusaurus||[]).push([[9685],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return p}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),d=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(r),p=n,_=u["".concat(c,".").concat(p)]||u[p]||f[p]||o;return r?a.createElement(_,i(i({ref:t},s),{},{components:r})):a.createElement(_,i({ref:t},s))}));function p(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var d=2;d<o;d++)i[d]=r[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9337:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return s},default:function(){return u}});var a=r(7462),n=r(3366),o=(r(7294),r(3905)),i=["components"],l={sidebar_label:"file_work",title:"dag_generator.works.file_work"},c=void 0,d={unversionedId:"data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/file_work",id:"data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/file_work",isDocsHomePage:!1,title:"dag_generator.works.file_work",description:"FileWork Objects",source:"@site/docs/data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/file_work.md",sourceDirName:"data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works",slug:"/data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/file_work",permalink:"/data-detective/docs/data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/file_work",editUrl:"https://github.com/TinkoffCreditSystems/data-detective/edit/master/tools/doc-site/docs/data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/file_work.md",tags:[],version:"current",frontMatter:{sidebar_label:"file_work",title:"dag_generator.works.file_work"},sidebar:"tutorialSidebar",previous:{title:"base_work",permalink:"/data-detective/docs/data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/base_work"},next:{title:"pg_work",permalink:"/data-detective/docs/data-detective-airflow/data_detective_airflow_api_reference/dag_generator/works/pg_work"}},s=[{value:"FileWork Objects",id:"filework-objects",children:[{value:"get_size",id:"get_size",children:[],level:4}],level:2}],f={toc:s};function u(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"filework-objects"},"FileWork Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class FileWork(BaseFileWork)\n")),(0,o.kt)("p",null,"File system work"),(0,o.kt)("h4",{id:"get_size"},"get","_","size"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def get_size(path: str) -> str\n")),(0,o.kt)("p",null,"Get the size of the object in the local work.\nIf the object is missing, it returns -1"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"path"),": Object name")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"Rounded object size"))}u.isMDXComponent=!0}}]);